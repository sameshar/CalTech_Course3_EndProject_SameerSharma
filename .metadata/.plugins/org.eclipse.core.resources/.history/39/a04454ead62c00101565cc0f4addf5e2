package com.BookingMyCabBuddy.service;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.repository.query.Param;
import org.springframework.stereotype.Service;

import com.BookingMyCabBuddy.bean.Booking;
import com.BookingMyCabBuddy.bean.Customer;
import com.BookingMyCabBuddy.dao.CustomerDAO;

@Service
public class CustomerService {

	@Autowired
	CustomerDAO customerDAO;
	
	//Method to create a customer account after ID and Email address uniqueness validation
	
	public String createCustomer(Customer customer) {
		System.out.println("SC > " + customer.toString());
		Optional<Customer> result = customerDAO.findById(customer.getCustomerID());
		String resultEmail = customer.getEmail();
		if (result.isPresent()) {
			Customer cc = result.get();
			if (cc.getEmail().equals(resultEmail)) {
				return "email exists";
			}
		} else {
			customerDAO.save(customer);
			
		}
		
//		if (result.isPresent()) {
//			return "Customer ID already exists";
//		} else if (resultEmail == null) {
//			String exists = customerDAO.existsByEmail(resultEmail);
//	        System.out.println("Didn't find the email address in the db? " + exists);
//	        if (exists != null) {
//	        	return "Customer email already exists";
//	        } else {
//	        	customerDAO.save(customer);
//	        }
//		}
//		return "customer saves";
		return "customer detail stored";
	}
	
	//Method to create a customer account after ID and Email address uniqueness validation
	
	public Optional<Customer> findCustomer(int customerid) {
		Optional<Customer> searchCustomerResult = customerDAO.findById(customerid);
		return searchCustomerResult;
	}
	
}
